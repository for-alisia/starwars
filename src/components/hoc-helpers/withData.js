import React, { Component } from 'react';
import Spinner from '../Spinner';

// HOC (Компонент высшего порядка) Он возвращает анонимный класс, в рендере которого возвращается View (это любой компонент, который мы передадим в функцию). Такой компонент получает все Props, переданные в него, как и обычный. В такой компонент можно выносить всю логику работы (работа с сетью и данными, например). То есть делать запросы и обрабатывать нужным образом данные будет компонент-обертка, а дочернему компоненту он будет передавать данные из props и state (те, которые нужны для рендеринга дочернего компонента). Это позволит дочернему компоненту быть компонентом-функцией, а не классом. HOC-компонент может принимать любые параметры, а не только дочерний компонент для рендеринга (можно еще передать функцию, запрашивающую данные с сервера, например)
const withData = (View, getData) => {
    return class extends Component {
        state = {
            data: null
        };

        componentDidMount() {
            getData().then(data => {
                this.setState({
                    data
                });
            });
        }
        render() {
            const { data } = this.state;

            if (!data) {
                return <Spinner />;
            }
            return <View {...this.props} data={data} />;
        }
    };
};

export default withData;
